---
import Layout from "../../layouts/Layout.astro";
import AppointmentList from "../../components/appointments/AppointmentList";
---

<Layout title="Dashboard" description="Panel de control del usuario">
  <main class="py-10">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <!-- Header -->
      <div class="md:flex md:items-center md:justify-between">
        <div class="flex-1 min-w-0">
          <h1 class="text-2xl font-bold leading-7 text-gray-900 dark:text-gray-100 sm:text-3xl sm:truncate">
            Dashboard
          </h1>
          <div class="mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6">
            <div class="mt-2 flex items-center text-sm text-gray-500 dark:text-gray-400">
              <svg class="flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
              <span id="user-info">Cliente</span>
            </div>
          </div>
        </div>
        <div class="mt-4 flex md:mt-0 md:ml-4">
          <a
            href="/appointments/new"
            class="ml-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 dark:bg-indigo-500 dark:hover:bg-indigo-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Nueva Cita
          </a>
        </div>
      </div>

      <!-- Welcome Section -->
      <div class="mt-8 bg-gradient-to-r from-indigo-500 to-purple-600 rounded-lg shadow-lg">
        <div class="px-6 py-8 sm:px-10 sm:py-10">
          <div class="flex items-center">
            <div class="flex-shrink-0">
              <div class="h-12 w-12 rounded-full bg-white bg-opacity-20 flex items-center justify-center">
                <svg class="h-6 w-6 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                </svg>
              </div>
            </div>
            <div class="ml-4">
              <h2 class="text-lg font-medium text-white">
                ¡Hola, <span id="welcome-user-name">Usuario</span>!
              </h2>
              <p class="text-indigo-100">
                Bienvenido de vuelta. Aquí puedes gestionar todas tus citas.
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- Stats Cards -->
      <div class="mt-8 grid grid-cols-1 gap-5 sm:grid-cols-2 lg:grid-cols-4">
        <!-- Stats will be populated by JavaScript -->
        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow dark:shadow-gray-700 rounded-lg">
          <div class="p-5">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <svg class="h-6 w-6 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                </svg>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Total Citas</dt>
                  <dd class="text-lg font-medium text-gray-900 dark:text-gray-100" id="total-appointments">-</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow dark:shadow-gray-700 rounded-lg">
          <div class="p-5">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <svg class="h-6 w-6 text-yellow-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Pendientes</dt>
                  <dd class="text-lg font-medium text-gray-900 dark:text-gray-100" id="pending-appointments">-</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow dark:shadow-gray-700 rounded-lg">
          <div class="p-5">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <svg class="h-6 w-6 text-green-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Confirmadas</dt>
                  <dd class="text-lg font-medium text-gray-900 dark:text-gray-100" id="confirmed-appointments">-</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white dark:bg-gray-800 overflow-hidden shadow dark:shadow-gray-700 rounded-lg">
          <div class="p-5">
            <div class="flex items-center">
              <div class="flex-shrink-0">
                <svg class="h-6 w-6 text-blue-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
              </div>
              <div class="ml-5 w-0 flex-1">
                <dl>
                  <dt class="text-sm font-medium text-gray-500 dark:text-gray-400 truncate">Completadas</dt>
                  <dd class="text-lg font-medium text-gray-900 dark:text-gray-100" id="completed-appointments">-</dd>
                </dl>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Appointments List -->
      <div class="mt-8">
        <AppointmentList client:load userRole="client" />
      </div>
    </div>
  </main>
</Layout>

<script>
  import { appointmentService } from "../../lib/api/appointments.ts";
  import { authService } from "../../lib/api/auth.ts";

  // Check authentication and role protection
  async function checkAuthAndRole() {
    if (!authService.isAuthenticated()) {
      window.location.href = '/login';
      return false;
    }

    const user = await authService.getProfile();
    if (!user) {
      window.location.href = '/login';
      return false;
    }

    // If user is a provider, redirect to provider dashboard
    if (user.role === 'provider') {
      window.location.href = '/provider/dashboard';
      return false;
    }

    return user;
  }

  // Load user info and dashboard stats
  async function loadDashboardData() {
    try {
      // Check auth and role first
      const user = await checkAuthAndRole();
      if (!user) return;

      console.log('User profile:', user); // Debug log
      
      const userName = user.email.split('@')[0];
      const capitalizedName = userName.charAt(0).toUpperCase() + userName.slice(1);
      
      // Update header info
      const userInfoElement = document.getElementById('user-info');
      if (userInfoElement) {
        userInfoElement.textContent = `Cliente: ${capitalizedName}`;
      }
      
      // Update welcome message
      const welcomeNameElement = document.getElementById('welcome-user-name');
      if (welcomeNameElement) {
        welcomeNameElement.textContent = capitalizedName;
      }

      // Load appointments
      const appointments = await appointmentService.getUserAppointments();
      
      // Calculate stats
      const total = appointments.length;
      const pending = appointments.filter(a => a.status === 'pending').length;
      const confirmed = appointments.filter(a => a.status === 'confirmed').length;
      const completed = appointments.filter(a => a.status === 'completed').length;

      // Update DOM
      document.getElementById('total-appointments')!.textContent = total.toString();
      document.getElementById('pending-appointments')!.textContent = pending.toString();
      document.getElementById('confirmed-appointments')!.textContent = confirmed.toString();
      document.getElementById('completed-appointments')!.textContent = completed.toString();
    } catch (error) {
      console.error('Error loading dashboard data:', error);
    }
  }

  // Load data when page loads
  document.addEventListener('DOMContentLoaded', loadDashboardData);
</script>
