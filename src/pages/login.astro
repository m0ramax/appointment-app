---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Iniciar Sesión" description="Accede a tu cuenta">
  <main class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <div class="mx-auto h-12 w-auto flex justify-center">
          <div class="h-12 w-12 bg-indigo-600 rounded-lg flex items-center justify-center">
            <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
          </div>
        </div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Iniciar Sesión
        </h2>
        <p class="mt-2 text-center text-sm text-gray-600">
          Accede a tu sistema de citas
        </p>
      </div>

      <!-- Error Message -->
      <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative" role="alert">
        <span class="block sm:inline" id="error-text"></span>
      </div>

      <!-- Success Message -->
      <div id="success-message" class="hidden bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative" role="alert">
        <span class="block sm:inline">¡Login exitoso! Redirigiendo...</span>
      </div>

      <form id="login-form" class="mt-8 space-y-6">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Email</label>
            <input
              id="email"
              name="email"
              type="email"
              autocomplete="email"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Correo electrónico"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Contraseña</label>
            <input
              id="password"
              name="password"
              type="password"
              autocomplete="current-password"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
              placeholder="Contraseña"
            />
          </div>
        </div>

        <div class="flex items-center justify-between">
          <div class="text-sm">
            <a href="/register" class="font-medium text-indigo-600 hover:text-indigo-500">
              ¿No tienes cuenta? Regístrate
            </a>
          </div>
        </div>

        <div>
          <button
            type="submit"
            id="login-button"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span class="absolute left-0 inset-y-0 flex items-center pl-3">
              <svg class="h-5 w-5 text-indigo-500 group-hover:text-indigo-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clip-rule="evenodd" />
              </svg>
            </span>
            <span id="login-text">Iniciar Sesión</span>
          </button>
        </div>

        <!-- Demo Accounts -->
        <div class="mt-6 border-t border-gray-200 pt-6">
          <h3 class="text-sm font-medium text-gray-700 mb-3">Cuentas de prueba:</h3>
          <div class="space-y-2 text-xs text-gray-600">
            <div class="flex justify-between">
              <span><strong>Cliente:</strong> test@example.com</span>
              <button type="button" onclick="fillDemoClient()" class="text-indigo-600 hover:text-indigo-500">
                Usar
              </button>
            </div>
            <div class="flex justify-between">
              <span><strong>Proveedor:</strong> provider@example.com</span>
              <button type="button" onclick="fillDemoProvider()" class="text-indigo-600 hover:text-indigo-500">
                Usar
              </button>
            </div>
            <div class="text-gray-500">
              Contraseña para ambas: <code>password123</code>
            </div>
          </div>
        </div>
      </form>
    </div>
  </main>
</Layout>

<script>
  import { authService } from "../lib/api/auth.ts";

  // Fill demo credentials
  window.fillDemoClient = function() {
    document.getElementById('email').value = 'test@example.com';
    document.getElementById('password').value = 'password123';
  };

  window.fillDemoProvider = function() {
    document.getElementById('email').value = 'provider@example.com';
    document.getElementById('password').value = 'password123';
  };

  // Show/hide messages
  function showError(message) {
    const errorDiv = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');
    const successDiv = document.getElementById('success-message');
    
    errorText.textContent = message;
    errorDiv.classList.remove('hidden');
    successDiv.classList.add('hidden');
  }

  function showSuccess() {
    const errorDiv = document.getElementById('error-message');
    const successDiv = document.getElementById('success-message');
    
    errorDiv.classList.add('hidden');
    successDiv.classList.remove('hidden');
  }

  function hideMessages() {
    const errorDiv = document.getElementById('error-message');
    const successDiv = document.getElementById('success-message');
    
    errorDiv.classList.add('hidden');
    successDiv.classList.add('hidden');
  }

  // Set loading state
  function setLoading(loading) {
    const button = document.getElementById('login-button');
    const text = document.getElementById('login-text');
    
    if (loading) {
      button.disabled = true;
      text.textContent = 'Iniciando sesión...';
    } else {
      button.disabled = false;
      text.textContent = 'Iniciar Sesión';
    }
  }

  // Handle form submission
  document.getElementById('login-form').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    
    if (!email || !password) {
      showError('Por favor completa todos los campos');
      return;
    }

    setLoading(true);
    hideMessages();

    try {
      await authService.login({ email, password });
      
      showSuccess();
      
      // Get user profile to determine redirect
      const user = await authService.getProfile();
      
      // Redirect based on role
      setTimeout(() => {
        if (user && user.role === 'provider') {
          window.location.href = '/provider/dashboard';
        } else {
          window.location.href = '/dashboard';
        }
      }, 1000);
      
    } catch (error) {
      console.error('Login error:', error);
      
      let errorMessage = 'Error al iniciar sesión';
      if (error.response?.status === 401) {
        errorMessage = 'Email o contraseña incorrectos';
      } else if (error.response?.data?.detail) {
        errorMessage = error.response.data.detail;
      }
      
      showError(errorMessage);
    } finally {
      setLoading(false);
    }
  });

  // Check if already logged in
  document.addEventListener('DOMContentLoaded', async function() {
    if (authService.isAuthenticated()) {
      try {
        const user = await authService.getProfile();
        if (user) {
          // Redirect to appropriate dashboard
          if (user.role === 'provider') {
            window.location.href = '/provider/dashboard';
          } else {
            window.location.href = '/dashboard';
          }
        }
      } catch (error) {
        // Token might be invalid, stay on login page
        console.log('Invalid token, staying on login page');
      }
    }
  });
</script>